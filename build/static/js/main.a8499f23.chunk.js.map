{"version":3,"sources":["polyfills.ts","Launch.tsx","Log.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["window","process","client","clientConfig","LaunchView","props","id","description","Button","size","color","circular","icon","onClick","Launch","alt","src","style","width","position","bottom","right","LoggerProvider","getLogger","ClientOptions","LaunchType","ProjectId","ModelId","Version","EnvironmentId","Endpoint","ForceRelay","UseNativeTouchEvents","UsePointerLock","PointerLockRelease","this","LoadingView","StreamerStatus","Connected","Completed","NotSupported","content","LaunchRequestStatus","status","LaunchStatusType","Unavailable","Error","Failed","className","viewBox","fillRule","d","left","top","transform","textAlign","EmbeddedView","videoRef","useRef","handle","useFullScreenHandle","isIPhone","System","Browser","os","navigator","userAgent","includes","height","Status","WarningThreshold","ExitThreshold","WarningCallback","exit","ExitCallback","location","reload","VideoRef","Emitter","InputEmitter","Stream","VideoStream","enter","active","Icon","name","audio","Audio","autoplay","volume","query","qs","search","clientOptions","launchType","endpoint","projectId","modelId","version","environmentId","undefined","usePointerLock","pointerLockRelease","useNativeTouchEvents","platform","PlatformNext","initialize","App","useState","modelDefinitionUnavailable","setModelDefinitionUnavailable","UndefinedModelDefinition","modelDefinition","setModelDefinition","availableModels","setAvailableModels","launchRequestError","setLaunchRequestError","streamerOptions","DefaultStreamerOptions","useAsyncEffect","logger","info","useAnonymousCredentials","connect","agent","iceServers","serviceCredentials","forceRelay","getModels","models","debug","error","useEffect","length","selectedModels","filter","model","launchRequestOptions","regionOverride","virtualizationProviderOverride","useLaunchRequest","launchRequest","queueLaunchRequest","useStreamer","streamerStatus","emitter","videoStream","audioStream","messageSubject","loading","setLoading","disconnect","srcObject","launch","load","subscription","subscribe","value","err","unsubscribe","isValid","display","overflow","alignItems","justifyContent","Disconnected","Withdrawn","href","AppWrapper","IsBrowserSupported","Boolean","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a8499f23.chunk.js","sourcesContent":["// Workaround: https://github.com/graphql/graphql-js/issues/1536\nimport * as process from 'process';\nwindow['process'] = process;\nexport {};\n","import React from 'react';\nimport { Button } from 'semantic-ui-react';\n\nimport './Launch.css';\nimport clientConfig from './client.json';\nconst client: ClientJson = clientConfig as ClientJson;\n\nclass ClientJson {\n  description?: string = 'description';\n  title?: string = 'title';\n}\n\ninterface LaunchProps {\n  Launch: () => void;\n}\n\nexport const LaunchView: React.FC<LaunchProps> = (props: LaunchProps) => {\n  return (\n    <div id=\"launchContainer\">\n      <div>\n        <h1>{client.description}</h1>\n        <Button size=\"massive\" color=\"blue\" circular icon=\"play\" onClick={() => props.Launch()}></Button>\n      </div>\n      <img alt=\"PureWeb Logo\" src=\"/pureweb.svg\" style={{ width: 100, position: 'absolute', bottom: 50, right: 10 }} />\n    </div>\n  );\n};\n","import { LoggerProvider } from \"@pureweb/platform-sdk\";\nexport default LoggerProvider.getLogger(\"client\");\n","/**\n * This reference template is designed to showcase the elements used to construct your own\n * application.\n * \n * When developing take care to:\n *  - Retain user interaction to begin audio.\n *  - Understand video sizing and mobile screen orientation.\n \n * See attached documentation for reference. Contact support@pureweb.com with any questions.\n * \n *\n * Copyright (C) PureWeb 2020\n */\n\nimport {\n  LaunchStatusEvent,\n  LaunchStatusType,\n  ModelDefinition,\n  PlatformNext,\n  UndefinedModelDefinition,\n  InputEmitter,\n  DefaultStreamerOptions,\n  StreamerStatus\n} from '@pureweb/platform-sdk';\n\nimport {\n  useStreamer,\n  useLaunchRequest,\n  IdleTimeout,\n  LaunchRequestOptions,\n  VideoStream,\n  System\n} from '@pureweb/platform-sdk-react';\n\nimport * as qs from 'query-string';\nimport React, { useEffect, useState, useRef } from 'react';\nimport { FullScreen, useFullScreenHandle } from 'react-full-screen';\nimport { Button, Icon } from 'semantic-ui-react';\nimport useAsyncEffect from 'use-async-effect';\nimport './App.css';\nimport clientConfig from './client.json';\n\nimport { LaunchView } from './Launch';\nimport logger from './Log';\n\nconst client: ClientJson = clientConfig as ClientJson;\n\nclass ClientJson {\n  environmentId?: string;\n  launchType?: string;\n  projectId?: string;\n  modelId?: string;\n  version?: string;\n  endpoint?: string;\n  usePointerLock?: boolean;\n  pointerLockRelease?: boolean;\n  useNativeTouchEvents?: boolean;\n}\n\nclass ClientOptions {\n  // Overridable connection options\n  LaunchType?: string;\n\n  // Launch queue configuration\n  ProjectId?: string;\n  ModelId?: string;\n  Version?: string;\n  EnvironmentId?: string;\n  Endpoint?: string;\n\n  // Overridable streamer options\n  ForceRelay = false;\n  UseNativeTouchEvents?: boolean;\n  UsePointerLock?: boolean;\n  PointerLockRelease?: boolean;\n\n  isValid(): boolean {\n    if (!this.ProjectId) {\n      return false;\n    }\n    if (!this.ModelId) {\n      return false;\n    }\n    return true;\n  }\n}\n\ninterface LoadingProps {\n  LaunchRequestStatus: LaunchStatusEvent;\n  StreamerStatus: StreamerStatus;\n}\n\nconst LoadingView: React.FC<LoadingProps> = (props: LoadingProps) => {\n  if (props.StreamerStatus === StreamerStatus.Connected || props.StreamerStatus === StreamerStatus.Completed) {\n    return <div />;\n  }\n\n  let content;\n\n  if (props.StreamerStatus === StreamerStatus.NotSupported) {\n    content = (\n      <div>\n        <h3>Your browser does not support the necessary WebRTC capabilities.</h3>\n      </div>\n    );\n  }\n  if (\n    props.LaunchRequestStatus.status === LaunchStatusType.Unavailable ||\n    props.LaunchRequestStatus.status === LaunchStatusType.Error ||\n    props.StreamerStatus === StreamerStatus.Failed\n  ) {\n    content = (\n      <div>\n        <h3>The experience is presently unavailable.</h3>\n        <h3>Please refresh to request a new session.</h3>\n      </div>\n    );\n  } else {\n    content = (\n      <div>\n        <svg className=\"logo\" viewBox=\"410.5 265.5 90.12054 104.02344\">\n          <g fillRule=\"nonzero\">\n            <path d=\"M 495.4032 310.1983 L 484.1122 336.6803 C 483.9952 336.9373 483.8712 337.1633 483.7452 337.3853 L 459.3812 304.5723 L 477.0682 270.8543 C 478.1542 271.7123 478.9182 272.8703 479.6262 273.9833 L 480.0632 274.6613 L 495.0372 299.2173 C 495.9882 300.8173 496.5252 302.6543 496.5952 304.5553 C 496.6622 306.4163 496.2812 308.3503 495.4032 310.1983 M 448.9282 347.3083 C 448.5962 350.9113 448.2602 354.5423 447.7532 358.1613 C 447.2272 361.2263 446.4642 363.1463 445.4102 364.2293 C 444.4962 365.1683 443.2082 365.5153 441.5212 365.5073 L 434.7122 365.5073 C 431.3752 365.3863 430.9012 363.7163 429.4212 358.4833 C 429.1172 357.4093 428.7792 356.2143 428.4382 355.0733 C 428.3492 354.9843 419.5002 325.7033 417.1802 318.0873 L 437.5242 340.7223 C 438.4982 341.7353 439.5882 342.6203 440.7782 343.2493 C 441.9062 343.8473 443.1252 344.2143 444.4232 344.2493 L 449.2172 344.2233 C 449.1232 345.2093 449.0262 346.2453 448.9282 347.3083 M 475.7822 340.0613 C 475.7812 340.0613 475.7802 340.0623 475.7782 340.0623 C 475.7772 340.0623 475.7762 340.0613 475.7742 340.0613 L 444.5222 340.2333 C 443.8962 340.2143 443.2662 340.0153 442.6522 339.6903 C 441.8882 339.2863 441.1522 338.6853 440.4682 337.9813 L 416.1402 310.9083 C 415.7802 310.5073 415.4802 310.1443 415.2322 309.7873 L 455.7092 306.3673 L 480.4472 339.6853 C 479.2762 339.9463 477.7772 340.0643 475.7822 340.0613 M 430.4182 282.5003 C 431.9252 280.3873 433.5952 278.7143 435.5382 277.4503 C 437.4782 276.1883 439.7352 275.3073 442.4212 274.7693 L 471.2542 269.7603 C 471.9712 269.6263 472.6072 269.5813 473.2012 269.5833 L 456.0442 302.2923 C 456.0402 302.2933 456.0382 302.2953 456.0352 302.2963 L 414.7762 305.7823 C 414.9612 305.1193 415.2262 304.4623 415.6132 303.8563 L 430.4182 282.5003 M 498.4782 297.1393 C 494.8552 289.8933 487.6422 278.9223 483.0092 271.8113 C 480.7722 268.3063 478.2572 264.3733 470.5452 265.8003 L 441.6342 270.8183 C 438.4552 271.4533 435.7392 272.5253 433.3502 274.0793 C 430.9652 275.6313 428.9412 277.6463 427.1432 280.1703 C 422.2182 287.3093 417.2882 294.6593 412.2272 301.6833 C 411.5152 302.7953 411.0152 304.0283 410.7322 305.2793 C 410.5422 306.1473 410.5022 307.0243 410.5322 307.8933 C 410.5272 307.9843 410.4932 308.0683 410.5012 308.1613 C 410.5022 308.1823 410.5152 308.1983 410.5172 308.2183 C 410.5192 308.2443 410.5082 308.2683 410.5112 308.2943 C 410.5252 308.4063 410.5592 308.4853 410.5762 308.5923 C 410.5942 308.7653 410.5812 308.9443 410.6092 309.1163 C 411.0622 311.8913 412.0262 315.0063 412.9092 317.8673 L 424.5782 356.2233 C 424.9802 357.5693 425.2792 358.6233 425.5472 359.5703 C 427.6332 366.9413 428.3002 369.2943 434.5702 369.5223 L 441.5212 369.5233 C 444.2902 369.5343 446.5132 368.8593 448.2922 367.0323 C 449.9312 365.3483 451.0502 362.7473 451.7222 358.8383 L 451.7302 358.7753 C 452.2332 355.1963 452.5822 351.4193 452.9282 347.6713 C 453.0292 346.5673 453.1382 345.4223 453.2582 344.2013 L 475.7902 344.0773 C 475.7912 344.0773 475.7912 344.0763 475.7912 344.0763 C 479.2552 344.0813 481.6612 343.7543 483.4982 342.9103 C 485.5602 341.9623 486.8052 340.4913 487.7962 338.2863 L 499.0572 311.8803 C 500.2042 309.4543 500.7002 306.8953 500.6102 304.4133 C 500.5162 301.8253 499.7812 299.3223 498.4782 297.1393\" />\n          </g>\n        </svg>\n        <h3>Please wait, your session is loading.</h3>\n      </div>\n    );\n  }\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        left: '50%',\n        top: '50%',\n        transform: 'translate(-50%, -50%)'\n      }}>\n      <div style={{ textAlign: 'center' }}>{content}</div>\n    </div>\n  );\n};\n\ninterface ViewProps {\n  LaunchRequestStatus: LaunchStatusEvent;\n  StreamerStatus: StreamerStatus;\n  VideoStream: MediaStream;\n  InputEmitter: InputEmitter;\n  UseNativeTouchEvents: boolean;\n  UsePointerLock: boolean;\n  PointerLockRelease: boolean;\n}\n\nconst EmbeddedView: React.FC<ViewProps> = (props: ViewProps) => {\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const handle = useFullScreenHandle();\n  // Fullscreen API presently supported on iPad, but not iPhone or iPod\n  const isIPhone = System.Browser().os === 'iOS' && !window.navigator.userAgent.includes('iPad');\n  return (\n    <div style={{ height: '100%' }}>\n      <FullScreen handle={handle}>\n        <IdleTimeout\n          Status={props.StreamerStatus}\n          WarningThreshold={300}\n          ExitThreshold={120}\n          WarningCallback={handle.exit}\n          ExitCallback={() => window.location.reload()} // TODO: How to 'close' a contribution?\n        />\n\n        <LoadingView LaunchRequestStatus={props.LaunchRequestStatus} StreamerStatus={props.StreamerStatus} />\n        <VideoStream\n          VideoRef={videoRef}\n          Emitter={props.InputEmitter}\n          Stream={props.VideoStream}\n          UseNativeTouchEvents={props.UseNativeTouchEvents}\n          UsePointerLock={props.UsePointerLock}\n          PointerLockRelease={props.PointerLockRelease}\n        />\n\n        <Button\n          onClick={handle.enter}\n          style={{ position: 'absolute', top: 10, right: 10 }}\n          className={isIPhone || handle.active || props.StreamerStatus !== StreamerStatus.Connected ? 'hidden' : ''}>\n          <Icon name=\"expand\" />\n        </Button>\n\n        {props.StreamerStatus !== StreamerStatus.Connected && (\n          <img\n            alt=\"PureWeb Logo\"\n            src=\"/pureweb.svg\"\n            style={{ width: 100, position: 'absolute', bottom: 50, right: 10 }}\n          />\n        )}\n      </FullScreen>\n    </div>\n  );\n};\n\n// Initialize audio.\n// load() must be called from a user interaction, especially to retain iOS audio\n// this can be 'mouseup', 'touchend' or 'keypress'\n// Pass the audioStream created from useStreamer as the srcObject to play game audio.\nconst audio = new Audio();\naudio.autoplay = true;\naudio.volume = 0.5;\n\n// Parse query parameters\nconst query = qs.parse(window.location.search);\nconst clientOptions: ClientOptions = new ClientOptions();\nclientOptions.LaunchType = (query['launchType'] as string) ?? client.launchType;\nif( query['collaboration'] &&  query['collaboration'] == 'true')  \n  clientOptions.LaunchType = 'local';\n\nclientOptions.Endpoint = (query['endpoint'] as string) ?? client.endpoint;\nclientOptions.ProjectId = (query['projectId'] as string) ?? client.projectId;\nclientOptions.ModelId = (query['modelId'] as string) ?? client.modelId;\nclientOptions.Version = (query['version'] as string) ?? client.version;\nclientOptions.EnvironmentId = (query['environmentId'] as string) ?? client.environmentId;\n// use client json config if usePointerLock query string parameter is undefined, else use query string parameter. Default to false if non are present\nclientOptions.UsePointerLock =\n  (query['usePointerLock'] === undefined ? client.usePointerLock : query['usePointerLock'] === 'true') ?? true;\n// release the pointer lock on mouse up if true\nclientOptions.PointerLockRelease =\n  (query['pointerLockRelease'] === undefined ? client.pointerLockRelease : query['pointerLockRelease'] === 'true') ??\n  true;\n\nclientOptions.ForceRelay = query['forceRelay'] !== undefined ?? false;\nclientOptions.UseNativeTouchEvents =\n  (query['useNativeTouchEvents'] === undefined\n    ? client.useNativeTouchEvents\n    : query['useNativeTouchEvents'] === 'true') ?? false;\n// Initialize platform reference\nconst platform = new PlatformNext();\nplatform.initialize({ endpoint: clientOptions.Endpoint || 'https://api.pureweb.io' });\n\nconst App: React.FC = () => {\n  const [modelDefinitionUnavailable, setModelDefinitionUnavailable] = useState(false);\n  const [modelDefinition, setModelDefinition] = useState(new UndefinedModelDefinition());\n  const [availableModels, setAvailableModels] = useState<ModelDefinition[]>();\n  const [launchRequestError, setLaunchRequestError] = useState<Error>();\n  const streamerOptions = DefaultStreamerOptions;\n\n  useAsyncEffect(async () => {\n    if (clientOptions.ProjectId) {\n      logger.info('Initializing available models: ' + clientOptions.ProjectId);\n      try {\n        await platform.useAnonymousCredentials(clientOptions.ProjectId, clientOptions.EnvironmentId);\n        await platform.connect();\n        logger.info('Agent Connected: ' + platform.agent.id);\n        streamerOptions.iceServers = platform.agent.serviceCredentials.iceServers as RTCIceServer[];\n        streamerOptions.forceRelay = clientOptions.ForceRelay;\n        const models = await platform.getModels();\n        setAvailableModels(models);\n        logger.debug('Available models', models);\n      } catch (err) {\n        logger.error(err);\n      }\n    }\n  }, [clientOptions]);\n\n  useEffect(() => {\n    if (availableModels?.length) {\n      const selectedModels = availableModels.filter(function (model: ModelDefinition): boolean {\n        if (clientOptions.ModelId === model.id) {\n          // If there is a version specified and we encounter it\n          if (clientOptions.Version && clientOptions.Version === model.version) {\n            return true;\n          }\n          // If there is no version specified and we find the primary version\n          if (!clientOptions.Version && model.active) {\n            return true;\n          }\n        }\n        return false;\n      });\n      if (selectedModels?.length) {\n        setModelDefinition(selectedModels[0]);\n      } else {\n        setModelDefinitionUnavailable(true);\n      }\n    }\n  }, [availableModels]);\n\n  const launchRequestOptions: LaunchRequestOptions = {\n    regionOverride: query['regionOverride'] as string,\n    virtualizationProviderOverride: query['virtualizationProviderOverride'] as string\n  };\n  const [status, launchRequest, queueLaunchRequest] = useLaunchRequest(platform, modelDefinition, launchRequestOptions);\n  const [streamerStatus, emitter, videoStream, audioStream, messageSubject] = useStreamer(\n    platform,\n    launchRequest,\n    streamerOptions\n  );\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (streamerStatus === StreamerStatus.Failed) {\n      platform.disconnect();\n    }\n  }, [streamerStatus]);\n\n  if (audioStream) {\n    audio.srcObject = audioStream;\n  }\n\n  const launch = async () => {\n    setLoading(true);\n    audio.load();\n\n    if (clientOptions.LaunchType !== 'local') {\n      try {\n        await queueLaunchRequest();\n      } catch (err) {\n        setLaunchRequestError(err);\n      }\n    }\n  };\n\n  // Log status messages\n  useEffect(() => {\n    logger.info('Status', status, streamerStatus);\n  }, [status, streamerStatus]);\n\n  // Subscribe to game messages\n  useEffect(() => {\n    const subscription = messageSubject.subscribe(\n      (value: string) => {\n        logger.info('Message: ' + value);\n      },\n      (err) => {\n        logger.error(err);\n      }\n    );\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [messageSubject]);\n\n  // Notify user of missing or errors in configuration\n  if (!clientOptions.isValid()) {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          height: '100%',\n          overflow: 'none',\n          textAlign: 'center',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }}>\n        <p>\n          Your client has one or more configuration errors. Please consult the{' '}\n          <a href=\"https://www.npmjs.com/package/@pureweb/cra-template-pureweb-client\"> README </a> for details on how\n          to configure the client template.\n        </p>\n      </div>\n    );\n  }\n\n  if (modelDefinitionUnavailable) {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          height: '100%',\n          overflow: 'none',\n          textAlign: 'center',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }}>\n        <span>The model that you have requested does not exist</span>\n      </div>\n    );\n  }\n\n  if (launchRequestError) {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          height: '100%',\n          overflow: 'none',\n          textAlign: 'center',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }}>\n        <span>\n          {process.env.NODE_ENV === 'development'\n            ? `There was an error with the launch request: ${launchRequestError}`\n            : 'It appears the requested model is currently not online as per your set schedule. Please contact support if it should be available.'}\n        </span>\n      </div>\n    );\n  }\n\n  // Begin connection\n  if (streamerStatus === StreamerStatus.Disconnected) {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          height: '100%',\n          overflow: 'none',\n          textAlign: 'center',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }}>\n        <h2>Disconnected from stream</h2>\n      </div>\n    );\n  }\n\n  if (streamerStatus === StreamerStatus.Failed) {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          height: '100%',\n          overflow: 'none',\n          textAlign: 'center',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }}>\n        <h2>Failure during stream</h2>\n        <h2>Please refresh to request a new session</h2>\n      </div>\n    );\n  }\n\n  if (streamerStatus === StreamerStatus.Withdrawn) {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          height: '100%',\n          overflow: 'none',\n          textAlign: 'center',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }}>\n        <h2>Streamer contribution withdrawn</h2>\n      </div>\n    );\n  }\n\n  if (loading) {\n    return (\n      <EmbeddedView\n        VideoStream={videoStream}\n        StreamerStatus={streamerStatus as StreamerStatus}\n        LaunchRequestStatus={status}\n        InputEmitter={emitter}\n        UseNativeTouchEvents={clientOptions.UseNativeTouchEvents!}\n        UsePointerLock={clientOptions.UsePointerLock!}\n        PointerLockRelease={clientOptions.PointerLockRelease!}\n      />\n    );\n  } else if (clientOptions.LaunchType !== 'local' && !availableModels) {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          height: '100%',\n          overflow: 'none',\n          textAlign: 'center',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }}>\n        <h2>Initializing...</h2>\n      </div>\n    );\n  } else if (clientOptions.LaunchType !== 'local' && !availableModels?.length) {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          height: '100%',\n          overflow: 'none',\n          textAlign: 'center',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }}>\n        <h2>No models are currently available in this environment.</h2>\n      </div>\n    );\n  } else {\n    return <LaunchView Launch={launch} />;\n  }\n};\n\nconst AppWrapper: React.FC = () => {\n  return System.IsBrowserSupported() ? (\n    <App />\n  ) : (\n    <div className=\"ui red segment center aligned basic\">\n      <h2 className=\"header\">Your browser is currently unsupported</h2>\n    </div>\n  );\n};\n\nexport default AppWrapper;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\"This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA\");\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\"New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA.\");\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import './polyfills';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}